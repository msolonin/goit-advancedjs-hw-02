{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet countdownInterval;\nconst startButton = document.querySelector('[data-start]');\nconst dateTimePicker = document.getElementById(\"datetime-picker\");\n\nconst timerElements = {\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]')\n};\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate < new Date()) {\n            startButton.disabled = true;\n            iziToast.error({ title: 'Error', message: 'Please choose a date in the future' });\n        } else {\n            startButton.disabled = false;\n        }\n    },\n};\n\nstartButton.disabled = true;\nflatpickr(dateTimePicker, options);\n\nstartButton.addEventListener(\"click\", () => {\n    // startButton.disabled = true;\n    dateTimePicker.disabled = true;\n    countdownInterval = setInterval(updateCountdown, 1000);\n});\n\nfunction updateCountdown() {\n    const now = new Date();\n    const timeRemaining = userSelectedDate - now;\n\n    if (timeRemaining <= 0) {\n        clearInterval(countdownInterval);\n        startButton.disabled = true;\n        dateTimePicker.disabled = false;\n        iziToast.success({ title: 'Completed', message: 'Countdown finished!' });\n    } else {\n        const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n        timerElements.days.textContent = padValue(days);\n        timerElements.hours.textContent = padValue(hours);\n        timerElements.minutes.textContent = padValue(minutes);\n        timerElements.seconds.textContent = padValue(seconds);\n    }\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor((ms % hour) / minute);\n    const seconds = Math.floor((ms % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction padValue(value) {\n    return String(value).padStart(2, '0');\n}\n"],"names":["userSelectedDate","countdownInterval","startButton","dateTimePicker","timerElements","options","selectedDates","iziToast","flatpickr","updateCountdown","timeRemaining","days","hours","minutes","seconds","convertMs","padValue","ms","value"],"mappings":"2GAKA,IAAIA,EAAmB,KACnBC,EACJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,eAAe,iBAAiB,EAE1DC,EAAgB,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAEMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBN,EAAmBM,EAAc,CAAC,EAC9BN,EAAmB,IAAI,MACvBE,EAAY,SAAW,GACvBK,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,GAEhFL,EAAY,SAAW,EAE9B,CACL,EAEAA,EAAY,SAAW,GACvBM,EAAUL,EAAgBE,CAAO,EAEjCH,EAAY,iBAAiB,QAAS,IAAM,CAExCC,EAAe,SAAW,GAC1BF,EAAoB,YAAYQ,EAAiB,GAAI,CACzD,CAAC,EAED,SAASA,GAAkB,CAEvB,MAAMC,EAAgBV,EADV,IAAI,KAGhB,GAAIU,GAAiB,EACjB,cAAcT,CAAiB,EAC/BC,EAAY,SAAW,GACvBC,EAAe,SAAW,GAC1BI,EAAS,QAAQ,CAAE,MAAO,YAAa,QAAS,qBAAqB,CAAE,MACpE,CACH,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EACjEN,EAAc,KAAK,YAAcY,EAASL,CAAI,EAC9CP,EAAc,MAAM,YAAcY,EAASJ,CAAK,EAChDR,EAAc,QAAQ,YAAcY,EAASH,CAAO,EACpDT,EAAc,QAAQ,YAAcY,EAASF,CAAO,CACvD,CACL,CAEA,SAASC,EAAUE,EAAI,CAMnB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAOI,EAAK,KAAQ,GAAM,EACzCH,EAAU,KAAK,MAAOG,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASE,EAASE,EAAO,CACrB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}